"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.data = void 0;
const builder_1 = require("../classes/builder");
const utils_1 = require("../classes/utils");
exports.data = {
    data: new builder_1.FunctionBuilder()
        .setName('measureText')
        .setValue('description', 'Get metrics from a text (width | height).')
        .setValue('use', '$measureText[text;type(width/height/object)]')
        .setValue('returns', 'Number | Object'),
    code: async (d) => {
        let r = d.unpack(d);
        if (!r.inside)
            return utils_1.Utils.Warn('Invalid inside provided in:', d.func);
        if (!d._.Canvas?.ctx)
            return utils_1.Utils.Warn('Not canvas found, create one first using $createCanvas, in:', d.func);
        let [text, type] = r.splits;
        if (!["width", "height", "object"].some(t => t === type.toLowerCase()))
            return utils_1.Utils.Warn('Invalid type provided in:', d.func);
        let obj = {
            width: (d._.Canvas.ctx.measureText(text.unescape())).width,
            height: (0, utils_1.getTextHeight)(d._.Canvas.ctx, text.unescape(), d._.Canvas.ctx.font)
        };
        let result = type.toLowerCase() === 'object' ? JSON.stringify(obj) : type.toLowerCase() === 'width' ? obj.width : obj.height.toString();
        return {
            code: d.code.resolve(`${d.func}[${r.inside}]`, result)
        };
    }
};
