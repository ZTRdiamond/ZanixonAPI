"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.data = void 0;
const tslib_1 = require("tslib");
const builder_1 = require("../classes/builder");
const utils_1 = require("../classes/utils");
const lodash_1 = tslib_1.__importDefault(require("lodash"));
exports.data = {
    data: new builder_1.FunctionBuilder()
        .setName('setObjectKey')
        .setValue('description', 'Set a value to a property in the object.')
        .setValue('use', '$setObjectKey[name;value]')
        .setValue('returns', 'Void'),
    code: async (d) => {
        let r = d.unpack(d);
        let obj = d._.object;
        if (!r.inside)
            return utils_1.Utils.Warn('Invalid inside provided in:', d.func);
        if (r.splits.length < 2)
            return utils_1.Utils.Warn('Invalid fields provided in:', d.func);
        if (!obj)
            return utils_1.Utils.Warn('No object created found. Use $createObject first. Error at:', d.func);
        lodash_1.default.set(obj, r.splits[0].unescape(), utils_1.Utils.loadObject(r.splits[1].unescape()) || r.splits[1].unescape());
        d._.object = obj;
        return {
            code: d.code.resolve(`${d.func}[${r.inside}]`, '')
        };
    }
};
