"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.data = void 0;
const builder_1 = require("../classes/builder");
const utils_1 = require("../classes/utils");
exports.data = {
    data: new builder_1.FunctionBuilder()
        .setName('abbreviateNumber')
        .setValue('description', 'Abbreviates the provided number.')
        .setValue('use', '$abbreviateNumber[number;decimals?]')
        .setValue('returns', 'String'),
    code: async (d) => {
        let r = d.unpack(d);
        if (!r.inside)
            return utils_1.Utils.Warn('Invalid inside provided in:', d.func);
        let [number, decimals = 2] = r.splits;
        if (!number)
            return utils_1.Utils.Warn('Missing number in:', d.func);
        if (typeof (decimals) != 'string')
            return utils_1.Utils.Warn('Invalid decimals provided:', d.func);
        let tier = Math.floor(Math.log10(Math.abs(Number(number) || 1)) / 3);
        if (tier === 0) {
            return {
                code: d.code.resolve(`${d.func}[${r.inside}]`, number)
            };
        }
        else {
            let symbol = utils_1.symbols[tier - 1];
            let abbreviated = Number(number) / (Math.pow(10, tier * 3));
            let result = abbreviated.toFixed(Number(decimals)) + symbol;
            return {
                code: d.code.resolve(`${d.func}[${r.inside}]`, result)
            };
        }
    }
};
