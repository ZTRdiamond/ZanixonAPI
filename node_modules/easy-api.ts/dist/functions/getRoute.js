"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.data = void 0;
const tslib_1 = require("tslib");
const builder_1 = require("../classes/builder");
const utils_1 = require("../classes/utils");
const lodash_1 = tslib_1.__importDefault(require("lodash"));
exports.data = {
    data: new builder_1.FunctionBuilder()
        .setName('getRoute')
        .setValue('description', 'Get a route property.')
        .setValue('use', '$getRoute[path;keys]')
        .setValue('returns', 'Any'),
    code: async (d) => {
        let r = d.unpack(d);
        if (!r.inside)
            return utils_1.Utils.Warn('Invalid inside provided in:', d.func);
        let [name, key] = r.splits;
        if (!name || !key)
            return utils_1.Utils.Warn('Invalid parameters provided in:', d.func);
        let result = d.routes.getRoutes().find(r => r.path.toLowerCase() == name);
        result = r.inside.unescape()?.toLowerCase() === '$default' ? result : lodash_1.default.get(result, r.inside.unescape());
        result = r.inside.unescape()?.toLowerCase() === '$default' ? JSON.stringify(result, null, 2) : typeof result !== 'object' ? result : JSON.stringify(result, null, 2);
        return {
            code: d.code.resolve(`${d.func}[${r.inside}]`, result?.escape() || 'undefined')
        };
    }
};
