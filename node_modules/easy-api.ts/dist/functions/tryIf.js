"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.data = void 0;
const builder_1 = require("../classes/builder");
const utils_1 = require("../classes/utils");
exports.data = {
    data: new builder_1.FunctionBuilder()
        .setName('tryIf')
        .setValue('description', 'Try a code (internal) if a condition is true (this is an advanced $if).')
        .setValue('use', '$tryIf[condition;internal code]')
        .setValue('returns', 'Void'),
    code: async (d) => {
        let r = d.unpack(d);
        if (!r.inside)
            return utils_1.Utils.Warn('Invalid inside provided in:', d.func);
        let [condition, code] = [r.splits[0], r.splits.slice(1).join(';')];
        let result = utils_1.Utils.condition(condition);
        if (result === null)
            return utils_1.Utils.Warn('Invalid condition provided in:', d.func);
        if (result) {
            code = code.replace(/@[a-zA-Z.]{1,35}\(/gim, x => x.replace('(', '[')).replace(/@[a-zA-Z.]{1,35}/gim, x => x.replace('@', '$')).replaceAll(')', ']');
            const interpreter = d.interpreter;
            await interpreter.parse(code, d.req, d.res, d).catch((e) => {
                d.interpreter.emit('error', e);
            });
        }
        return {
            code: d.code.resolve(`${d.func}[${r.inside}]`, '')
        };
    }
};
